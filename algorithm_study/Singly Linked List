// Singly Linked List
#include <iostream>

using namespace std;

struct node
{
    int data;
    node* nextNode;
};

class LinkedList
{
private:
	node* head;
	node* tail;
public:
	LinkedList()
	{
		head = NULL;
		tail = NULL; //head 와 tail의 포인터를 초기화;
	}
	void addFrontNode(int n);
	void addNode(int n);
	void insertNode(node* prevNode, int n);
	void deleteNode(node* prevNode);
	node* getHead()
	{
		return head;
	}
	void display(node* head);
};

void LinkedList::addFrontNode(int n)
{
    node* temp=new node;
    temp->data=n;

    if(head==NULL) //node를 처음으로 추가해줄 때
    {
        head=temp;
        tail=temp;
    }
    else
    {
        temp->nextNode=head;
        head=temp;
    }
}

void LinkedList::addNode(int n)
{
    node* temp=new node;
    temp->data=n;
    temp->nextNode=NULL;
    if(head==NULL)
    {
        head=temp;
        tail=temp;
    }
    else
    {
        tail->nextNode=temp;
        tail=temp;
    }
}

void LinkedList::insertNode(node* prevNode, int n)
{
    node* temp=new node;
    temp->data=n;
    temp->nextNode=NULL;

    temp->nextNode=prevNode->nextNode;
    prevNode->nextNode=temp;
}

void LinkedList::deleteNode(node* prevNode)
{
    node* temp=prevNode->nextNode;
    prevNode->nextNode=temp->nextNode;
    delete temp;
}

// delete할 때 그냥 이렇게 하면 안되남...
//void LinkedList::deleteNode(node* prevNode)
//{
//    prevNode->nextNode=prevNode->nextNode->nextNode;
//}

void LinkedList::display(node* head)
{
    if(head==NULL)
    {
        cout<<"Linked List is Empty!!"<<endl;
    }
    else if(head->nextNode==NULL)
    {
        cout<<head->data<<endl;
        cout<<"------DONE------"<<endl;
    }
    else
    {
        cout<<head->data<<endl;
        display(head->nextNode);
    }
}

int main()
{
    LinkedList a;
    a.addNode(1);
    a.addNode(2);
    a.addNode(3);
    a.addNode(4);
    a.addNode(5);

    a.display(a.getHead());

    a.addFrontNode(0);
    a.display(a.getHead());

    a.insertNode(a.getHead()->nextNode, 18);
    a.display(a.getHead());

    a.deleteNode(a.getHead()->nextNode);
    a.display(a.getHead());

    return 0;
}
